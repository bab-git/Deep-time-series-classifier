
=================== Covolutional Neural Network Structure =========
Classifier_1d_6_conv_v2(
  (raw): Sequential(
    (0): SepConv1d_v4(
      (layers): Sequential(
        (0): Conv2d(2, 2, kernel_size=(1, 8), stride=(1, 2), padding=(0, 3), groups=2)
        (1): Conv2d(2, 32, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): Dropout(p=0.5, inplace=False)
      )
    )
    (1): SepConv1d_v4(
      (layers): Sequential(
        (0): Conv2d(32, 32, kernel_size=(1, 8), stride=(1, 4), padding=(0, 2), groups=32)
        (1): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): Dropout(p=0.5, inplace=False)
      )
    )
    (2): SepConv1d_v4(
      (layers): Sequential(
        (0): Conv2d(64, 64, kernel_size=(1, 8), stride=(1, 4), padding=(0, 2), groups=64)
        (1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): Dropout(p=0.5, inplace=False)
      )
    )
    (3): SepConv1d_v4(
      (layers): Sequential(
        (0): Conv2d(128, 128, kernel_size=(1, 8), stride=(1, 4), padding=(0, 2), groups=128)
        (1): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): Dropout(p=0.5, inplace=False)
      )
    )
    (4): SepConv1d_v4(
      (layers): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 8), stride=(1, 4), padding=(0, 2), groups=256)
        (1): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): Dropout(p=0.5, inplace=False)
      )
    )
    (5): SepConv1d_v4(
      (layers): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 8), stride=(1, 4), padding=(0, 2), groups=512)
        (1): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (FC): Sequential(
    (0): Flatten()
    (1): Linear(in_features=1024, out_features=128, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=128, out_features=128, bias=True)
    (5): ReLU(inplace=True)
    (6): Dropout(p=0.5, inplace=False)
  )
  (out): Sequential(
    (0): Linear(in_features=128, out_features=2, bias=True)
  )
  (quant): QuantStub()
  (dequant): DeQuantStub()
)
